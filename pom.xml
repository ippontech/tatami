<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>fr.ippon.tatami</groupId>
    <artifactId>tatami</artifactId>
    <version>4.0.5</version>

    <modules>
        <module>web</module>
        <module>services</module>
        <module>tatamibot</module>
        <module>mobile</module>
    </modules>

    <packaging>pom</packaging>

    <description>Tatami is an enterprise micro-blogging platform</description>
    <inceptionYear>2012</inceptionYear>
    <url>https://github.com/ippontech/tatami</url>
    <organization>
        <name>Ippon Technologies</name>
        <url>http://www.ippon.fr</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/ippontech/tatami/issues</url>
    </issueManagement>
    <scm>
        <url>http://github.com/ippontech/tatami</url>
        <connection>scm:git:git@github.com:ippontech/tatami.git</connection>
    </scm>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active></spring.profiles.active>
            </properties>
        </profile>

        <profile>
            <id>elasticsearch-remote</id>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active></spring.profiles.active>
                <tatami.elasticsearch.engine.mode>remote</tatami.elasticsearch.engine.mode>
                <tatami.elasticsearch.path.data>target/elasticsearch</tatami.elasticsearch.path.data>
                <tatami.elasticsearch.path.log>target/elasticsearch/log</tatami.elasticsearch.path.log>
                <tatami.elasticsearch.http.enabled>true</tatami.elasticsearch.http.enabled>
            </properties>
        </profile>
        <profile>
            <id>preprod</id>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active>apple-push</spring.profiles.active>
                <jetty.scanIntervalSeconds>0</jetty.scanIntervalSeconds>
                <logback.loglevel>DEBUG</logback.loglevel>
                <logback.appender>PAPERTRAIL</logback.appender>
                <logback.syslogHost>logs.papertrailapp.com</logback.syslogHost>
                <logback.syslogHost.port>38143</logback.syslogHost.port>
                <ehcache.maxBytesLocalHeap>128M</ehcache.maxBytesLocalHeap>
                <tatami.url>http://sandbox.tatamisoft.com</tatami.url>
                <tatami.smtp.host>localhost</tatami.smtp.host>
                <tatami.smtp.port>25</tatami.smtp.port>
                <tatami.smtp.from>tatami@ippon.fr</tatami.smtp.from>
                <tatami.wro4j.enabled>true</tatami.wro4j.enabled>
                <tatami.message.reloading.enabled>false</tatami.message.reloading.enabled>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active></spring.profiles.active>
                <jetty.port>80</jetty.port>
                <jetty.scanIntervalSeconds>0</jetty.scanIntervalSeconds>
                <logback.loglevel>INFO</logback.loglevel>
                <logback.appender>PAPERTRAIL</logback.appender>
                <logback.syslogHost>logs.papertrailapp.com</logback.syslogHost>
                <logback.syslogHost.port>38143</logback.syslogHost.port>
                <ehcache.maxBytesLocalHeap>512M</ehcache.maxBytesLocalHeap>
                <tatami.url>http://tatami.ippon.fr</tatami.url>
                <tatami.ldapauth.url>ldap://10.55.0.4:389</tatami.ldapauth.url>
                <tatami.smtp.host>localhost</tatami.smtp.host>
                <tatami.smtp.port>25</tatami.smtp.port>
                <tatami.smtp.from>tatami@ippon.fr</tatami.smtp.from>
                <tatami.google.analytics.key>UA-10959780-3</tatami.google.analytics.key>
                <tatami.wro4j.enabled>true</tatami.wro4j.enabled>
                <tatami.message.reloading.enabled>false</tatami.message.reloading.enabled>
                <tatami.connection.security>https</tatami.connection.security>
                <tatami.elasticsearch.engine.mode>embedded</tatami.elasticsearch.engine.mode>
                <tatami.elasticsearch.path.data>/opt/tatami/data/elasticsearch</tatami.elasticsearch.path.data>
                <tatami.elasticsearch.path.log>/opt/tatami/log/elasticsearch</tatami.elasticsearch.path.log>
                <tatami.elasticsearch.http.enabled>false</tatami.elasticsearch.http.enabled>
                <tatami.automatic.registration>false</tatami.automatic.registration>
                <tatami.metrics.graphite.host></tatami.metrics.graphite.host>
                <tatami.metrics.graphite.port>2003</tatami.metrics.graphite.port>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${maven.jetty.version}</version>
                        <configuration>
                            <scanIntervalSeconds>${jetty.scanIntervalSeconds}</scanIntervalSeconds>
                            <stopKey>stop-jetty</stopKey>
                            <stopPort>9999</stopPort>
                            <systemProperties>
                                <systemProperty>
                                    <name>jetty.port</name>
                                    <value>${jetty.port}</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- <goal>run-exploded</goal> -->
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>insert-version</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <executable>scripts/insertBuildVersion.sh</executable>
                                    <arguments>
                                        <argument>${project.version}</argument>
                                        <argument>${buildNumber}</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>stress-tests</id>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active></spring.profiles.active>
                <jetty.scanIntervalSeconds>0</jetty.scanIntervalSeconds>
                <logback.loglevel>WARN</logback.loglevel>
                <logback.appender>CONSOLE</logback.appender>
                <ehcache.maxBytesLocalHeap>64M</ehcache.maxBytesLocalHeap>
                <tatami.automatic.registration>true</tatami.automatic.registration>
            </properties>
        </profile>
        <profile>
            <id>uitest</id>
            <properties>
                <!-- Spring profiles available : tatamibot, metrics, apple-push -->
                <spring.profiles.active></spring.profiles.active>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>services/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/integration/resources</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <id>add-uitests-source</id>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${basedir}/src/integration/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>1.4</version>
                        <configuration>
                            <providerSelection>1.8</providerSelection>
                            <sources>
                                <fileset>
                                    <directory>${basedir}/src/integration/java</directory>
                                    <includes>
                                        <include>**/*.groovy</include>
                                    </includes>
                                </fileset>
                            </sources>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.12.3</version>
                        <configuration>
                            <testSourceDirectory>${basedir}/src/integration/java</testSourceDirectory>
                            <includes>
                                <include>**/*Spec.*</include>
                            </includes>
                            <systemPropertyVariables>
                                <!-- <geb.build.baseUrl>http://localhost:8080/</geb.build.baseUrl> -->
                                <geb.build.reportsDir>target/test-reports/geb</geb.build.reportsDir>
                                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                                <google.password>${google.password}</google.password>
                                <google.email>${google.email}</google.email>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cassandra-maven-plugin</artifactId>
                        <version>${maven.cassandra.version}</version>
                        <executions>
                            <execution>
                                <id>start-cassandra</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>1.8.1</version>
                </dependency>
                <dependency>
                    <groupId>org.spockframework</groupId>
                    <artifactId>spock-core</artifactId>
                    <version>0.6-groovy-1.8</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.geb</groupId>
                    <artifactId>geb-spock</artifactId>
                    <version>0.7.1</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-firefox-driver</artifactId>
                    <version>${selenium.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-htmlunit-driver</artifactId>
                    <version>${selenium.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-chrome-driver</artifactId>
                    <version>${selenium.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-support</artifactId>
                    <version>${selenium.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.directory.server</groupId>
                    <artifactId>apacheds-all</artifactId>
                    <version>1.5.5</version>
                    <!-- Don't change this version ! It breaks the code -->
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.directory.shared</groupId>
                            <artifactId>shared-ldap</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <properties>
        <!-- Default project properties -->
        <jetty.port>8080</jetty.port>
        <jetty.scanIntervalSeconds>1</jetty.scanIntervalSeconds>
        <logback.loglevel>DEBUG</logback.loglevel>
        <logback.appender>CONSOLE</logback.appender>
        <logback.syslogHost>localhost</logback.syslogHost>
        <ehcache.maxBytesLocalHeap>64M</ehcache.maxBytesLocalHeap>
        <tatami.version>${project.version}</tatami.version>
        <tatami.url>http://localhost:8080</tatami.url>
        <tatami.ldapauth.url>ldap://directory:389</tatami.ldapauth.url>
        <tatami.ldapauth.searchbase>dc=ippon,dc=fr</tatami.ldapauth.searchbase>
        <tatami.ldapauth.searchfilter>(uid={0})</tatami.ldapauth.searchfilter>
        <tatami.smtp.host></tatami.smtp.host>
        <tatami.smtp.port></tatami.smtp.port>
        <tatami.smtp.user></tatami.smtp.user>
        <tatami.smtp.password></tatami.smtp.password>
        <tatami.smtp.from>tatami@localhost</tatami.smtp.from>
        <tatami.smtp.tls></tatami.smtp.tls>
        <tatami.google.analytics.key></tatami.google.analytics.key>
        <tatami.wro4j.enabled>false</tatami.wro4j.enabled>
        <tatami.message.reloading.enabled>true</tatami.message.reloading.enabled>
        <tatami.connection.security>any</tatami.connection.security>
        <tatami.elasticsearch.engine.mode>embedded</tatami.elasticsearch.engine.mode>
        <tatami.elasticsearch.path.data>target/elasticsearch</tatami.elasticsearch.path.data>
        <tatami.elasticsearch.path.log>target/elasticsearch/log</tatami.elasticsearch.path.log>
        <tatami.elasticsearch.http.enabled>true</tatami.elasticsearch.http.enabled>
        <tatami.automatic.registration>false</tatami.automatic.registration>
        <tatami.metrics.graphite.host></tatami.metrics.graphite.host>
        <tatami.metrics.graphite.port>2003</tatami.metrics.graphite.port>

        <tatami.google.clientId></tatami.google.clientId>
        <tatami.google.clientSecret></tatami.google.clientSecret>
        <tatami.token.validityInSeconds>2592000</tatami.token.validityInSeconds>

        <!--Test configurations: Sonar, unit test, code coverage -->

        <project.npm.bin>${project.basedir}/node_modules/.bin</project.npm.bin>
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
        <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>


        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
        <sonar.tests>${project.basedir}/src/test/</sonar.tests>
        <sonar.javascript.lcov.reportPath>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPath>
        <sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>

        <sonar.exclusions>src/main/webapp/assets/**.*</sonar.exclusions>
        <!-- Configuration -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.6</java.version>

        <!-- Dependencies -->
        <spring.version>3.2.3.RELEASE</spring.version>
        <spring.security.version>3.1.3.RELEASE</spring.security.version>
        <elasticsearch.version>0.20.6</elasticsearch.version>
        <aspectj.version>1.6.11</aspectj.version>
        <slf4j.version>1.7.5</slf4j.version>
        <logback.version>1.0.13</logback.version>
        <httpclient.core.version>4.2.2</httpclient.core.version> <!-- pour compatiblité selenium -->
        <httpclient.client.version>4.2.2</httpclient.client.version> <!-- pour compatiblité selenium -->
        <cassandra.version>1.2.6</cassandra.version>
        <hector.version>1.1-4</hector.version>
        <hector.mapper.version>3.1-09</hector.mapper.version>
        <persistence.api.version>1.0.2</persistence.api.version>
        <javax.inject.version>1</javax.inject.version>
        <javax.servlet.api.version>3.0.1</javax.servlet.api.version>
        <javax.validation.api.version>1.0.0.GA</javax.validation.api.version>
        <hibernate.validator.version>4.3.0.Final</hibernate.validator.version>
        <jstl.version>1.2</jstl.version>
        <jackson.version>2.1.2</jackson.version>
        <jodatime.version>2.1</jodatime.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.io.version>2.3</commons.io.version>
        <junit.version>4.11</junit.version>
        <hamcrest.version>1.3</hamcrest.version>
        <awaitility.version>1.3.5</awaitility.version>
        <cassandra.unit.version>1.2.0.1</cassandra.unit.version>
        <mockito.version>1.9.0</mockito.version>
        <rome.version>1.0</rome.version>
        <pegdown.version>1.2.1</pegdown.version>
        <velocity.version>1.7</velocity.version>
        <yammer.metrics.version>2.2.0</yammer.metrics.version>
        <camel.version>2.11.0</camel.version>

        <selenium.version>2.31.0</selenium.version>

        <!-- Maven plugins -->
        <maven.compiler.version>3.0</maven.compiler.version>
        <maven.enforcer.version>1.2</maven.enforcer.version>
        <maven.surefire.version>2.14</maven.surefire.version>
        <maven.war.version>2.3</maven.war.version>
        <maven.jetty.version>8.1.13.v20130916</maven.jetty.version>
        <maven.cassandra.version>1.2.1-1</maven.cassandra.version>
        <maven.wro4j.version>1.7.0</maven.wro4j.version>
        <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
    </properties>

    <repositories>

        <repository>
            <id>sonatype-releases</id>
            <name>Sonatype Releases Repository</name>
            <url>http://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <prerequisites>
        <maven>3.1.0</maven>
    </prerequisites>

    <dependencies>
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.20.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-plus</artifactId>
            <version>v1-rev345-1.21.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hppc</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.notnoop.apns</groupId>
            <artifactId>apns</artifactId>
            <version>0.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-ehcache</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-graphite</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-servlet</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-spring</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-web</artifactId>
            <version>${yammer.metrics.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${persistence.api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.api.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.6.5</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-script</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-rss</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-twitter</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-stream</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>${httpclient.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.geronimo.javamail</groupId>
            <artifactId>geronimo-javamail_1.4_mail</artifactId>
            <version>1.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-annotations</artifactId>
            <version>1.1.0.RC3</version>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hectorclient</groupId>
            <artifactId>hector-core</artifactId>
            <version>${hector.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hectorclient</groupId>
            <artifactId>hector-object-mapper</artifactId>
            <version>${hector.mapper.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pegdown</groupId>
            <artifactId>pegdown</artifactId>
            <version>${pegdown.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-openid</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.pac4j</groupId>
            <artifactId>pac4j-oauth</artifactId>
            <version>1.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.pac4j</groupId>
            <artifactId>spring-security-pac4j</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome</artifactId>
            <version>${rome.version}</version>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-all</artifactId>
            <version>${cassandra.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-util</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>0.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <version>${cassandra.unit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-all</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <!-- Tatami must be configured at the root context (/) of the application server -->
        <finalName>root</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.0.0,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.6.0,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <shortRevisionLength>7</shortRevisionLength>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <reportsDirectory>${project.testresult.directory}/surefire-reports</reportsDirectory>
                    <argLine>-XX:MaxPermSize=128m -Xmx256m ${surefireArgLine}</argLine>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Force alphabetical order to have a reproducible build -->
                    <runOrder>alphabetical</runOrder>
                    <!--
                      <runOrder>reversealphabetical</runOrder>
                      -->
                </configuration>
            </plugin>

            <!-- Cassandra must be configured before jetty ... -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cassandra-maven-plugin</artifactId>
                <version>${maven.cassandra.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.cassandra</groupId>
                        <artifactId>cassandra-all</artifactId>
                        <version>${cassandra.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${maven.jetty.version}</version>
                <configuration>
                    <scanIntervalSeconds>${jetty.scanIntervalSeconds}</scanIntervalSeconds>
                    <stopKey>stop-jetty</stopKey>
                    <stopPort>9999</stopPort>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.port</name>
                            <value>${jetty.port}</value>
                        </systemProperty>
                        <systemProperty>
                            <name>spring.profiles.active</name>
                            <value>${spring.profiles.active}</value>
                        </systemProperty>
                    </systemProperties>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <path>/</path>
                    <contextReloadable>true</contextReloadable>
                    <protocol>org.apache.coyote.http11.Http11NioProtocol</protocol>
                    <systemProperties>
                        <spring.profiles.active>${spring.profiles.active}</spring.profiles.active>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <additionalConfig>
                        <file>
                            <name>.settings/org.eclipse.core.resources.prefs</name>
                            <content>
                                <![CDATA[eclipse.preferences.version=1${line.separator}encoding//src/main/webapp/WEB-INF/messages/messages_en.properties=UTF-8${line.separator}encoding//src/main/webapp/WEB-INF/messages/messages_fr.properties=UTF-8${line.separator}encoding/<project>=${project.build.sourceEncoding}${line.separator}]]>
                            </content>
                        </file>
                    </additionalConfig>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.4.201502262128</version>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
                            <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
                            <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>ro.isdc.wro4j</groupId>
                                        <artifactId>
                                            wro4j-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.4.7,)
                                        </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.gmaven
                                        </groupId>
                                        <artifactId>
                                            gmaven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.4,)
                                        </versionRange>
                                        <goals>
                                            <goal>testCompile</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
